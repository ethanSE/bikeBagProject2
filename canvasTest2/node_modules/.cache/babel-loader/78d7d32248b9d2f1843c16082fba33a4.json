{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan\\\\Desktop\\\\projects\\\\canvas-test-2\\\\canvasTest2\\\\src\\\\components\\\\BikeCanvas.jsx\";\nimport React from 'react';\nimport SvgDisplay from './SvgDisplay';\n\nclass BikeCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.fileInput = React.createRef();\n    this.svgActive = false;\n    this.state = {\n      coords: []\n    };\n  }\n\n  render() {\n    var canvas = this.canvas;\n    var img = null;\n    var files = this.fileInput;\n    let coords = [];\n    var canvasStyle = {\n      fill: 'red',\n      stroke: 'purple',\n      strokeWidth: 1\n    };\n\n    function onImageLoad() {\n      img = new Image();\n      img.onload = drawImage;\n      img.onerror = imageLoadFailed;\n      img.src = URL.createObjectURL(files.current.files[0]);\n    }\n\n    function drawImage() {\n      //draw image to canvas\n      console.log('draw running');\n      console.log(img.width);\n      canvas.current.width = img.width;\n      canvas.current.height = img.height;\n      var ctx = canvas.current.getContext('2d');\n      ctx.drawImage(img, 0, 0);\n    }\n\n    function imageLoadFailed() {\n      console.error(\"The provided file couldn't be loaded as an Image media\");\n    }\n\n    function canvasClick(evt) {\n      console.log('clicked');\n      let rect = canvas.current.getBoundingClientRect();\n      let x = evt.clientX - rect.left;\n      let y = evt.clientY - rect.top;\n      console.log(x, y);\n      coords.push([x, y]);\n      drawCircle(x, y);\n      console.log(coords);\n    }\n\n    function drawCircle(x, y) {\n      var ctx = canvas.current.getContext('2d');\n      ctx.strokeStyle = \"#FF0000\";\n      ctx.lineWidth = 3;\n      ctx.beginPath();\n      ctx.arc(x, y, 10, 0, 2 * Math.PI);\n      ctx.stroke();\n    }\n\n    return React.createElement(\"div\", {\n      className: \"canvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      ref: this.fileInput,\n      onChange: onImageLoad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"canvas\", {\n      ref: this.canvas,\n      width: \"0\",\n      height: \"0\",\n      onClick: canvasClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BikeCanvas;","map":{"version":3,"sources":["C:/Users/Ethan/Desktop/projects/canvas-test-2/canvasTest2/src/components/BikeCanvas.jsx"],"names":["React","SvgDisplay","BikeCanvas","Component","constructor","props","canvas","createRef","fileInput","svgActive","state","coords","render","img","files","canvasStyle","fill","stroke","strokeWidth","onImageLoad","Image","onload","drawImage","onerror","imageLoadFailed","src","URL","createObjectURL","current","console","log","width","height","ctx","getContext","error","canvasClick","evt","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","push","drawCircle","strokeStyle","lineWidth","beginPath","arc","Math","PI","bind"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport SvgDisplay from './SvgDisplay';\r\n\r\n\r\nclass BikeCanvas extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.canvas = React.createRef();\r\n        this.fileInput = React.createRef();\r\n        this.svgActive = false;\r\n        this.state = {\r\n            coords: []\r\n        }\r\n    }\r\n\r\n    render () {\r\n        var canvas = this.canvas;\r\n        var img = null;\r\n        var files = this.fileInput;\r\n        let coords = [];\r\n\r\n        var canvasStyle = {\r\n            fill: 'red',\r\n            stroke: 'purple',\r\n            strokeWidth: 1\r\n        }\r\n\r\n        function onImageLoad () {\r\n            img = new Image();\r\n            img.onload = drawImage;\r\n            img.onerror = imageLoadFailed;\r\n            img.src = URL.createObjectURL(files.current.files[0]);\r\n        }\r\n\r\n        function drawImage(){ //draw image to canvas\r\n            console.log('draw running')\r\n            console.log(img.width)\r\n            canvas.current.width = img.width;\r\n            canvas.current.height = img.height;\r\n            var ctx = canvas.current.getContext('2d');\r\n            ctx.drawImage(img, 0, 0);\r\n        }\r\n\r\n        function imageLoadFailed() {\r\n            console.error(\"The provided file couldn't be loaded as an Image media\");\r\n        }\r\n\r\n        function canvasClick(evt) {\r\n            console.log('clicked');\r\n            let rect = canvas.current.getBoundingClientRect();\r\n            let x = (evt.clientX - rect.left);\r\n            let y = (evt.clientY - rect.top);\r\n            console.log(x, y);\r\n            coords.push([x,y]);\r\n            drawCircle(x,y);\r\n            console.log(coords);\r\n        }\r\n\r\n        function drawCircle(x, y) {\r\n            var ctx = canvas.current.getContext('2d');\r\n            ctx.strokeStyle = \"#FF0000\";\r\n            ctx.lineWidth = 3;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, 10, 0, 2 * Math.PI);\r\n            ctx.stroke();\r\n        }\r\n\r\n        return (\r\n            <div className='canvas'>\r\n                <input type='file' ref={this.fileInput} onChange={onImageLoad}/>           \r\n                <canvas ref={this.canvas} width='0' height='0' onClick={canvasClick.bind(this)}/>\r\n                {/* <button onClick={setSvgActive}>Submit</button> */}\r\n                {/* <SvgDisplay coords={coords}/> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default BikeCanvas;"]},"metadata":{},"sourceType":"module"}