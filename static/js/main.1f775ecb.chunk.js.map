{"version":3,"sources":["styles/CustomSpec.module.css","styles/Home.module.css","styles/StyleSelection.module.css","styles/ImageUpload.module.css","styles/ScaleInput.module.css","styles/ShapeInput.module.css","styles/Header.module.css","customHooks/useUIStateManager.js","modeContext.js","customSpecContext.js","aws-exports.js","components/Header.jsx","components/Home.jsx","assets/images/Toptube.js","assets/images/Full.js","assets/images/Front.js","components/StyleSelection.jsx","components/ImageUpload.jsx","actions.js","customHooks/useWindowWidth.js","components/ScaleInput.jsx","components/ShapeInput.jsx","components/Download.jsx","components/CustomSpecification.jsx","components/App.js","index.js"],"names":["module","exports","initialCustomSpecUIState","image","scale","shape","download","customSpecUIReducer","state","action","confirmation","Error","ModeContext","createContext","CustomSpecContext","awsmobile","Header","setActiveMainComponent","useContext","className","styles","header","headerContent","headerTitle","links","onClick","Amplify","configure","config","SignInOutComponent","useState","user","setUser","useEffect","Hub","listen","payload","event","data","Auth","currentAuthenticatedUser","signOut","federatedSignIn","Home","home","iconDescContainer","bigScreenReverseRow","icon","fontSize","color","text","row","SvgToptube","props","width","height","viewBox","d","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","transform","ry","opacity","SvgFull","SvgFront","StyleSelection","customSpecState","setCustomSpecState","setActiveCustomSpecPhase","handleClick","style","cssStyle","styleContainer","styleItemActive","styleItem","bagIcon","Front","Full","ImageUpload","customSpecUIState","fileInput","useRef","uploadCanvas","img","Image","saveImage","ctx","current","getContext","drawImage","canvasDataUrl","toDataURL","imageLoadFailed","console","error","imageUpload","button","htmlFor","type","name","id","ref","onChange","onload","onerror","src","URL","createObjectURL","files","hidden","minimized","debounce","fn","ms","timer","clearTimeout","setTimeout","apply","arguments","useWindowWidth","debounceTimer","window","innerWidth","windowWidth","setWindowWidth","addEventListener","removeEventListener","ScaleInput","ScaleInputActive","topTubePoints","setTopTubePoints","sourceDimensions","setSourceDimensions","canvasScaleRef","scaleInputRef","scaleInputDivRef","imageHeight","imageWidth","displayScaleFactor","clientWidth","drawTopTubePoints","drawImageOnCanvas","forEach","point","drawCircle","strokeStyle","lineWidth","beginPath","arc","Math","PI","scaleInput","onSubmit","preventDefault","length","hypot","value","setPixelToInchScale","scaleInputForm","input","placeholder","evt","rect","getBoundingClientRect","xSourceCoord","clientX","left","ySourceCoord","clientY","top","ShapeInput","shapeInput","ShapeInputActive","points","setPoints","canvasShapeRef","shapeInputDivRef","drawPoints","drawLines","i","moveTo","lineTo","buttonRow","Download","BikeCanvas","customSpec","App","mode","activeMainComponent","useReducer","dispatch","newActive","useUIStateManager","custom","Provider","MainComponent","CustomSpecification","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f775ecb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"customSpec\":\"CustomSpec_customSpec__3zSeu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__2Zh7y\",\"iconDescContainer\":\"Home_iconDescContainer__lwb9z\",\"row\":\"Home_row__3uUUw\",\"bigScreenReverseRow\":\"Home_bigScreenReverseRow__2LpWW\",\"icon\":\"Home_icon__1RNnw\",\"text\":\"Home_text__yLEED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bagIcon\":\"StyleSelection_bagIcon__gjqEV\",\"styleContainer\":\"StyleSelection_styleContainer__2rKvy\",\"styleItem\":\"StyleSelection_styleItem__HH9RA\",\"styleItemActive\":\"StyleSelection_styleItemActive__3VPpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageUpload\":\"ImageUpload_imageUpload__2kyVe\",\"button\":\"ImageUpload_button__2ZvqF\",\"fileInput\":\"ImageUpload_fileInput__32kdw\",\"hidden\":\"ImageUpload_hidden__3cEGb\",\"minimized\":\"ImageUpload_minimized__1kd-9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scaleInputForm\":\"ScaleInput_scaleInputForm__3GYfS\",\"scaleInput\":\"ScaleInput_scaleInput__3lksu\",\"button\":\"ScaleInput_button__26wym\",\"minimized\":\"ScaleInput_minimized__1IaZN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shapeInput\":\"ShapeInput_shapeInput__34sbM\",\"buttonRow\":\"ShapeInput_buttonRow__1DTqS\",\"button\":\"ShapeInput_button__vHN-I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3diqq\",\"headerContent\":\"Header_headerContent__1skw-\",\"headerTitle\":\"Header_headerTitle__2ZMQM\",\"links\":\"Header_links__KrrUu\"};","//the process of a user completing the design of a bag occurs in phases\r\n//each phase of user interaction occurs in a seperate component\r\n//completion of a phase reveals the next component and minimizes the previous component\r\n//a user can click on a previous component that is minimized to go back to that step\r\n//this hook abstracts the reducer that manages whether each component is inactive, active, or minimized\r\n\r\nimport { useReducer } from 'react';\r\n\r\nconst initialCustomSpecUIState = {\r\n    image: null,\r\n    scale: null,\r\n    shape: null,\r\n    download: null\r\n}\r\n\r\nconst customSpecUIReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'image':\r\n            return {\r\n                ...state,\r\n                image: 'active',\r\n                scale: state.scale === null ? null : 'minimized',\r\n                shape: state.shape === null ? null : 'minimized',\r\n                confirmation: state.confirmation == null ? null : 'minimized'\r\n            }\r\n\r\n        case 'scale':\r\n            return {\r\n                ...state,\r\n                scale: 'active',\r\n                image: 'minimized',\r\n                shape: state.shape == null ? null : 'minimized',\r\n                confirmation: state.confirmation == null ? null : 'minimized'\r\n            }\r\n        case 'shape':\r\n            return {\r\n                ...state,\r\n                shape: 'active',\r\n                image: 'minimized',\r\n                scale: 'minimized',\r\n                confirmation: state.confirmation == null ? null : 'minimized'\r\n            }\r\n        case 'confirmation':\r\n            return {\r\n                ...state,\r\n                shape: 'minimized',\r\n                scale: 'minimized',\r\n                image: 'minimized',\r\n            }\r\n        default:\r\n            throw new Error('invalid custom spec phase');\r\n    }\r\n}\r\n\r\nexport function useUIStateManager() {\r\n    const [customSpecUIState, dispatch] = useReducer(customSpecUIReducer, initialCustomSpecUIState);\r\n\r\n    const setActiveCustomSpecPhase = newActive => {\r\n        dispatch(newActive)\r\n    };\r\n    \r\n    return [customSpecUIState, setActiveCustomSpecPhase];\r\n};","import { createContext } from \"react\";\r\nexport const ModeContext = createContext('home');","import { createContext } from \"react\";\r\nexport const CustomSpecContext = createContext(null);","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-west-2\",\n    \"aws_cognito_identity_pool_id\": \"us-west-2:d18c05cc-ae5c-4b7a-9e72-16ac49d23888\",\n    \"aws_cognito_region\": \"us-west-2\",\n    \"aws_user_pools_id\": \"us-west-2_hIcaYQhye\",\n    \"aws_user_pools_web_client_id\": \"4emsfur38nbennha4cqquo0l52\",\n    \"oauth\": {\n        \"domain\": \"bike-bag-project2-new-env.auth.us-west-2.amazoncognito.com\",\n        \"scope\": [\n            \"phone\",\n            \"email\",\n            \"openid\",\n            \"profile\",\n            \"aws.cognito.signin.user.admin\"\n        ],\n        \"redirectSignIn\": \"http://localhost:3000/\",\n        \"redirectSignOut\": \"http://localhost:3000/\",\n        \"responseType\": \"code\"\n    },\n    \"federationTarget\": \"COGNITO_USER_POOLS\"\n};\n\n\nexport default awsmobile;\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { ModeContext } from '../modeContext';\r\nimport styles from '../styles/Header.module.css';\r\nimport Amplify from 'aws-amplify';\r\nimport config from '../aws-exports';\r\nimport { Auth, Hub } from 'aws-amplify';\r\n\r\nAmplify.configure(config)\r\n\r\nexport default function Header() {\r\n    const { setActiveMainComponent } = useContext(ModeContext);\r\n\r\n    return (\r\n        <div className={styles.header}>\r\n            <div className={styles.headerContent}>\r\n                <h1 className={styles.headerTitle}>Bike Frame Bag Designer</h1>\r\n                <div className={styles.links}>\r\n                    <SignInOutComponent />\r\n                    <h3 onClick={() => setActiveMainComponent('customSpec')}> Custom </h3>\r\n                    <h3 onClick={() => setActiveMainComponent('home')}> Home </h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SignInOutComponent = () => {\r\n    const [user, setUser] = useState(null)\r\n\r\n    useEffect(() => {\r\n        Hub.listen(\"auth\", ({ payload: { event, data } }) => {\r\n            if (event === \"signOut\") {\r\n                setUser(null);\r\n            } else if (event === 'signIn') {\r\n                setUser(Auth.currentAuthenticatedUser());\r\n            }\r\n        });\r\n    });\r\n\r\n    if (user) {\r\n        return (<h3 onClick={() => Auth.signOut()}> Sign Out </h3>)\r\n    } else {\r\n        return (\r\n            <h3 onClick={() => Auth.federatedSignIn()}> Sign In </h3>\r\n        )\r\n    }\r\n}","import React, { useContext } from 'react';\r\nimport { ModeContext } from '../modeContext';\r\nimport styles from '../styles/Home.module.css';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport SquareFootIcon from '@material-ui/icons/SquareFoot';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\n\r\nconst Home = () => {\r\n    const { setActiveMainComponent } = useContext(ModeContext);\r\n    return (\r\n        <div className={styles.home}>\r\n            \r\n            <h1>How it works</h1>\r\n\r\n            <div className={styles.iconDescContainer}>\r\n                <div className={styles.bigScreenReverseRow}>\r\n                    <div className={styles.icon}>\r\n                        <BackupIcon fontSize={'inherit'} color={'inherit'} />\r\n                    </div>\r\n\r\n                    <div className={styles.text}>\r\n                        <p>1. Upload an image of your bike</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.row}>\r\n                    <div className={styles.icon}>\r\n                        <SquareFootIcon fontSize={'inherit'} color={'inherit'} />\r\n                    </div>\r\n                    <div className={styles.text}>\r\n                        <p>2. Measure your bike to establish the scale</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.bigScreenReverseRow}>\r\n                    <div className={styles.icon}>\r\n                        <CreateIcon fontSize={'inherit'} color={'inherit'} />\r\n                    </div>\r\n\r\n                    <div className={styles.text}>\r\n                        <p>3. Outline your desired shape</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.row}>\r\n                    <div className={styles.icon}>\r\n                        <AddShoppingCartIcon fontSize={'inherit'} color={'inherit'} />\r\n                    </div>\r\n                    <div className={styles.text}>\r\n                        <p>4. Submit your design and receive your custom bike frame bag</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button className='button' onClick={() => setActiveMainComponent('customSpec')}> create custom bag</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\n\r\nconst SvgToptube = props => (\r\n  <svg width={644.091} height={341.511} {...props} viewBox=\"0 0 644 342\">\r\n    <path\r\n      d=\"M207.937 66.749l305.069-59.25 15.127 52.947L274.75 333.999z\"\r\n      fill=\"none\"\r\n      stroke=\"#e08900\"\r\n      strokeWidth={15}\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <rect\r\n      width={52.764}\r\n      height={118.582}\r\n      x={369.241}\r\n      y={-221.188}\r\n      transform=\"matrix(.6959 .71813 -.67781 .73523 0 0)\"\r\n      ry={22.455}\r\n      opacity={0.97}\r\n      fill=\"#0000b2\"\r\n    />\r\n    <rect\r\n      width={52.764}\r\n      height={118.582}\r\n      x={194.913}\r\n      y={207.595}\r\n      transform=\"matrix(.98364 -.18014 .23523 .97194 0 0)\"\r\n      ry={18.571}\r\n      opacity={0.97}\r\n      fill=\"#0000b2\"\r\n    />\r\n    <path\r\n      d=\"M207.937 66.749L10.021 264.665 7.5 303.744l267.25 30.255M528.133 60.446L636.546 297.44\"\r\n      fill=\"none\"\r\n      stroke=\"#e08900\"\r\n      strokeWidth={15}\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M216.762 72.737l15.127 58.618 247.08-27.733L520.254 59.5 508.28 15.38z\"\r\n      fill=\"#92ba40\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default SvgToptube;\r\n","import React from \"react\";\r\n\r\nconst SvgFull = props => (\r\n  <svg width={644.091} height={341.511} {...props} viewBox=\"0 0 644 342\">\r\n    <path\r\n      d=\"M207.937 66.749l305.069-59.25 15.127 52.947L274.75 333.999z\"\r\n      fill=\"none\"\r\n      stroke=\"#e08900\"\r\n      strokeWidth={15}\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M207.937 66.749L10.021 264.665 7.5 303.744l267.25 30.255M528.133 60.446L636.546 297.44\"\r\n      fill=\"none\"\r\n      stroke=\"#e08900\"\r\n      strokeWidth={15}\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M216.577 72.183l48.308 193.333h63.381L520.7 60.837l-12.644-44.79z\"\r\n      fill=\"#92ba40\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default SvgFull;\r\n","import React from \"react\";\r\n\r\nconst SvgFront = props => (\r\n  <svg width={644.091} height={341.511} {...props} viewBox=\"0 0 644 342\">\r\n    <path\r\n      d=\"M207.937 66.749l305.069-59.25 15.127 52.947L274.75 333.999z\"\r\n      fill=\"none\"\r\n      stroke=\"#e08900\"\r\n      strokeWidth={15}\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <rect\r\n      width={52.764}\r\n      height={118.582}\r\n      x={194.913}\r\n      y={207.595}\r\n      transform=\"matrix(.98364 -.18014 .23523 .97194 0 0)\"\r\n      ry={18.571}\r\n      opacity={0.97}\r\n      fill=\"#0000b2\"\r\n    />\r\n    <path\r\n      d=\"M207.937 66.749L10.021 264.665 7.5 303.744l267.25 30.255M528.133 60.446L636.546 297.44\"\r\n      fill=\"none\"\r\n      stroke=\"#e08900\"\r\n      strokeWidth={15}\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M269.523 62.098l51.275 211.962L479.415 104.96 520.7 60.837l-12.644-44.79z\"\r\n      fill=\"#92ba40\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default SvgFront;\r\n","import React, { useContext } from 'react';\r\nimport TopTube from '../assets/images/Toptube';\r\nimport Full from '../assets/images/Full';\r\nimport Front from '../assets/images/Front';\r\nimport { CustomSpecContext } from '../customSpecContext';\r\nimport cssStyle from '../styles/StyleSelection.module.css';\r\n\r\nconst StyleSelection = () => {\r\n    const { customSpecState, setCustomSpecState, setActiveCustomSpecPhase } = useContext(CustomSpecContext)\r\n    \r\n    const handleClick = (style) => {\r\n        setCustomSpecState({ ...customSpecState, style: style })\r\n        setActiveCustomSpecPhase('image');\r\n    }\r\n\r\n    return (\r\n        <div className={cssStyle.styleContainer}>\r\n            <div className={customSpecState.style === 'topTube' ? cssStyle.styleItemActive : cssStyle.styleItem}\r\n                onClick={() => handleClick('topTube')}>\r\n                <h4>Top Tube</h4>\r\n                <TopTube className={cssStyle.bagIcon} />\r\n            </div>\r\n            <div className={customSpecState.style === 'front' ? cssStyle.styleItemActive : cssStyle.styleItem}\r\n                onClick={() => handleClick('front')}>\r\n                <h4>Front</h4>\r\n                <Front className={cssStyle.bagIcon} />\r\n            </div>\r\n            <div className={customSpecState.style === 'full' ? cssStyle.styleItemActive : cssStyle.styleItem}\r\n                onClick={() => handleClick('full')}>\r\n                <h4>Full</h4>\r\n                <Full className={cssStyle.bagIcon} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleSelection;","import React, { useRef, useContext } from 'react';\r\nimport { CustomSpecContext } from '../customSpecContext';\r\nimport styles from '../styles/ImageUpload.module.css';\r\n\r\nconst ImageUpload = () => {\r\n    const { customSpecUIState, setCustomSpecState, customSpecState, setActiveCustomSpecPhase } = useContext(CustomSpecContext)\r\n    let fileInput = useRef();\r\n    let uploadCanvas = useRef();\r\n    var img = new Image();\r\n\r\n    const onImageLoad = () => {\r\n        img.onload = saveImage;\r\n        img.onerror = imageLoadFailed;\r\n        img.src = URL.createObjectURL(fileInput.current.files[0]);\r\n    }\r\n\r\n    const saveImage = () => {\r\n        let ctx = uploadCanvas.current.getContext('2d');\r\n        uploadCanvas.current.width = img.width;\r\n        uploadCanvas.current.height = img.height;\r\n        ctx.drawImage(img, 0, 0);\r\n        let canvasDataUrl = uploadCanvas.current.toDataURL('image/png');\r\n        setCustomSpecState({ ...customSpecState, image: canvasDataUrl })\r\n        setActiveCustomSpecPhase('scale');\r\n    }\r\n\r\n    const imageLoadFailed = () => {\r\n        console.error(\"The provided file couldn't be loaded as an Image media\");\r\n    }\r\n\r\n\r\n    switch (customSpecUIState.image) {\r\n        case 'active':\r\n            return (\r\n                <div className={styles.imageUpload}>\r\n                    <h3>Image Upload</h3>\r\n                    <label className={styles.button} htmlFor='file'><p>Upload Photo</p></label>\r\n                    <input className={styles.fileInput} type='file' name='file' id='file' ref={fileInput} onChange={onImageLoad} />\r\n                    <canvas className={styles.hidden}\r\n                        ref={uploadCanvas}\r\n                        width=''\r\n                        height='' />\r\n                </div>\r\n            )\r\n        case 'minimized':\r\n            return (\r\n                <div className={styles.minimized} onClick={() => setActiveCustomSpecPhase('image')}>\r\n                    <h3>Image Upload</h3>\r\n                </div>\r\n            )\r\n        default: return null\r\n    }\r\n\r\n}\r\n\r\nexport default ImageUpload;","export function debounce(fn, ms) {\r\n    let timer\r\n    return () => {\r\n        clearTimeout(timer)\r\n        timer = setTimeout(() => {\r\n            timer = null\r\n            fn.apply(this, arguments)\r\n        }, ms)\r\n    };\r\n}","import { debounce } from '../actions';\r\nimport {useState, useEffect} from 'react'\r\n\r\nexport function useWindowWidth(debounceTimer) {\r\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth)\r\n    useEffect(() => {\r\n        window.addEventListener('resize', debounce(() => setWindowWidth(window.innerWidth), debounceTimer));\r\n        return () => {\r\n            window.removeEventListener('resize', debounce(() => setWindowWidth(window.innerWidth), debounceTimer))\r\n        };\r\n    }, [])\r\n\r\n    return [windowWidth];\r\n};","import React, { useRef, useContext, useEffect, useState } from 'react';\r\nimport { useWindowWidth } from '../customHooks/useWindowWidth'\r\nimport { CustomSpecContext } from '../customSpecContext';\r\nimport styles from '../styles/ScaleInput.module.css'\r\n\r\nexport default function ScaleInput() {\r\n    const { customSpecUIState, setActiveCustomSpecPhase } = useContext(CustomSpecContext)\r\n    switch (customSpecUIState.scale) {\r\n        case 'active':\r\n            return <ScaleInputActive />\r\n        case 'minimized':\r\n            return (\r\n                <div className={styles.minimized} onClick={() => setActiveCustomSpecPhase('scale')}>\r\n                    <h3>Scale</h3>\r\n                </div>\r\n            )\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nconst ScaleInputActive = () => {\r\n    const [windowWidth] = useWindowWidth(50)\r\n    const [topTubePoints, setTopTubePoints] = useState([]);\r\n    const [sourceDimensions, setSourceDimensions] = useState(null);\r\n    const { setCustomSpecState, customSpecState, setActiveCustomSpecPhase } = useContext(CustomSpecContext)\r\n    let canvasScaleRef = useRef();\r\n    let scaleInputRef = useRef();\r\n    let scaleInputDivRef = useRef();\r\n    let ctx;\r\n\r\n    //loads image onto canvas and calls drawTopTubePoints\r\n    const drawImageOnCanvas = () => {\r\n        let image = new Image();\r\n        image.onload = () => {\r\n            if (!sourceDimensions) setSourceDimensions({ imageHeight: image.height, imageWidth: image.width });\r\n            let displayScaleFactor = scaleInputDivRef.current.clientWidth / image.width;\r\n            canvasScaleRef.current.width = image.width * displayScaleFactor;\r\n            canvasScaleRef.current.height = image.height * displayScaleFactor;\r\n            ctx = canvasScaleRef.current.getContext('2d');\r\n            ctx.drawImage(image, 0, 0, canvasScaleRef.current.width, canvasScaleRef.current.height); //draws image on canvas\r\n            drawTopTubePoints()\r\n        }\r\n        image.src = customSpecState.image;\r\n    }\r\n\r\n    //draws the image and points on the canvas when window width or points changes\r\n    useEffect(() => {\r\n        drawImageOnCanvas();\r\n    }, [windowWidth, topTubePoints])\r\n\r\n    //draws the points on the canvas\r\n    const drawTopTubePoints = () => {\r\n        topTubePoints.forEach(point => {\r\n            drawCircle((point[0] * (canvasScaleRef.current.width / sourceDimensions.imageWidth)),\r\n                (point[1] * (canvasScaleRef.current.height / sourceDimensions.imageHeight)))\r\n        })\r\n    }\r\n\r\n    //draws a user-selected point on the canvas\r\n    const drawCircle = (x, y) => {\r\n        ctx = canvasScaleRef.current.getContext('2d');\r\n        ctx.strokeStyle = \"#FF0000\";\r\n        ctx.lineWidth = 3;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, 10, 0, 2 * Math.PI);\r\n        ctx.stroke();\r\n    }\r\n\r\n    //captures user click on the canvas and converts to pixel coordinates of original image\r\n    const canvasScaleClick = (evt) => {\r\n        let displayScaleFactor = scaleInputDivRef.current.clientWidth / sourceDimensions.imageWidth;\r\n        if (topTubePoints.length < 2) {\r\n            let rect = canvasScaleRef.current.getBoundingClientRect();\r\n            let x = (evt.clientX - rect.left);\r\n            let y = (evt.clientY - rect.top);\r\n            let xSourceCoord = x / displayScaleFactor;\r\n            let ySourceCoord = y / displayScaleFactor;\r\n            if (topTubePoints.length === 1) {\r\n                setTopTubePoints([topTubePoints[0], [xSourceCoord, ySourceCoord]]);\r\n            } else {\r\n                setTopTubePoints([[xSourceCoord, ySourceCoord]]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //establishes a ratio of source image pixels to inches\r\n    const setPixelToInchScale = (event) => {\r\n        event.preventDefault();\r\n        if (topTubePoints.length === 2) {\r\n            let distance = Math.hypot(topTubePoints[0][0] - topTubePoints[1][0], topTubePoints[0][1] - topTubePoints[1][1])\r\n            let scale = (distance / scaleInputRef.value);\r\n            setCustomSpecState({ ...customSpecState, scale: scale })\r\n            setActiveCustomSpecPhase('shape');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.scaleInput} ref={scaleInputDivRef}>\r\n            <h3>Scale</h3>\r\n            <form onSubmit={(event) => setPixelToInchScale(event)} className={styles.scaleInputForm}>\r\n                <input ref={(input) => { scaleInputRef = input }} placeholder='Top Tube Length in inches' type='number' />\r\n                <button className={styles.button} type='submit'>Submit</button>\r\n                <button className={styles.button} onClick={() => setTopTubePoints([])}>Reset</button>\r\n            </form>\r\n            <canvas ref={canvasScaleRef} width='0' height='0' onClick={canvasScaleClick} />\r\n        </div>\r\n    )\r\n}","import React, { useRef, useContext, useEffect, useState } from 'react';\r\nimport { CustomSpecContext } from '../customSpecContext';\r\nimport { useWindowWidth } from '../customHooks/useWindowWidth'\r\nimport styles from '../styles/ShapeInput.module.css'\r\n\r\nconst ShapeInput = () => {\r\n    const { customSpecUIState, setActiveCustomSpecPhase } = useContext(CustomSpecContext)\r\n\r\n    switch (customSpecUIState.shape) {\r\n        case 'active':\r\n            return <ShapeInputActive />\r\n        case 'minimized':\r\n            return (\r\n                <div className={styles.shapeInput} onClick={() => setActiveCustomSpecPhase('shape')}>\r\n                    <h3>Shape</h3>\r\n                </div>\r\n            )\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nexport default ShapeInput;\r\n\r\nconst ShapeInputActive = () => {\r\n    const [windowWidth] = useWindowWidth(50)\r\n    const { customSpecState, setCustomSpecState, setActiveCustomSpecPhase } = useContext(CustomSpecContext);\r\n    const [points, setPoints] = useState([]);\r\n    const [sourceDimensions, setSourceDimensions] = useState(null);\r\n    let canvasShapeRef = useRef();\r\n    let shapeInputDivRef = useRef();\r\n    let displayScaleFactor;\r\n\r\n    //draws the image and points on the canvas when window width or points changes\r\n    useEffect(() => {\r\n        drawImageOnCanvas();\r\n    }, [windowWidth, points])\r\n\r\n    const drawImageOnCanvas = () => {\r\n        let image = new Image();\r\n        image.onload = () => {\r\n            if (!sourceDimensions) setSourceDimensions({ imageHeight: image.height, imageWidth: image.width }); //saves image source dimensions on first load\r\n            canvasShapeRef.current.width = shapeInputDivRef.current.clientWidth; //set width of canvas to be equal to its parent div\r\n            displayScaleFactor = canvasShapeRef.current.width / image.width;\r\n            canvasShapeRef.current.height = displayScaleFactor * image.height; //set height based on width and image ratio\r\n            let ctx = canvasShapeRef.current.getContext('2d');\r\n            ctx.drawImage(image, 0, 0, canvasShapeRef.current.width, canvasShapeRef.current.height); //draws image on canvas\r\n            drawPoints();\r\n            drawLines();\r\n        }\r\n        image.src = customSpecState.image;\r\n    }\r\n\r\n    const drawPoints = () => {\r\n        points.forEach(point => {\r\n            drawCircle(point[0] * displayScaleFactor, point[1] * displayScaleFactor)\r\n        })\r\n    }\r\n\r\n    const drawCircle = (x, y) => {\r\n        let ctx = canvasShapeRef.current.getContext('2d');\r\n        ctx.strokeStyle = \"#FF0000\";\r\n        ctx.lineWidth = 3;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, 10, 0, 2 * Math.PI);\r\n        ctx.stroke();\r\n    }\r\n\r\n    const drawLines = () => {\r\n        for (let i = 0; i < points.length - 1; i++) {\r\n            let ctx = canvasShapeRef.current.getContext('2d');\r\n            ctx.strokeStyle = \"#FF0000\";\r\n            ctx.lineWidth = 3;\r\n            ctx.moveTo(points[i][0] * displayScaleFactor, points[i][1] * displayScaleFactor);\r\n            ctx.lineTo(points[i + 1][0] * displayScaleFactor, points[i + 1][1] * displayScaleFactor);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n\r\n    //allows users to reset\r\n    const resetShape = () => {\r\n        setPoints([]);\r\n    }\r\n    //allows users to submit\r\n    const shapeInputSubmit = () => {\r\n        setCustomSpecState({\r\n            ...customSpecState,\r\n            shape: points\r\n        })\r\n        setActiveCustomSpecPhase('confirmation');\r\n    }\r\n\r\n    // allows user to select points\r\n    // translates display coords to source coords\r\n    const canvasShapeClick = (evt) => {\r\n\r\n        //get display coordinate of click\r\n        let rect = canvasShapeRef.current.getBoundingClientRect();\r\n        let x = (evt.clientX - rect.left);\r\n        let y = (evt.clientY - rect.top);\r\n\r\n        //transform to source coordinate\r\n        let xSourceCoord = x * sourceDimensions.imageWidth / canvasShapeRef.current.width;\r\n        let ySourceCoord = y * sourceDimensions.imageHeight / canvasShapeRef.current.height;\r\n\r\n        //check through existing points to see if click is on a previously selected point \r\n        //(ie. when closing the shape)\r\n        for (let i = 0; i < points.length; i++) {\r\n            let distance = Math.hypot(points[i][0] * displayScaleFactor - xSourceCoord * displayScaleFactor, points[i][1] * displayScaleFactor- ySourceCoord * displayScaleFactor);\r\n            if (distance < 10 ) {        //i.e. if click is within drawn circle\r\n                setPoints([...points, [points[i][0], points[i][1]]]); //add that same point to the array\r\n                return;\r\n            };\r\n        }\r\n        setPoints([...points, [xSourceCoord, ySourceCoord]]);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.shapeInput} ref={shapeInputDivRef}>\r\n            <h3>Shape</h3>\r\n            <div className={styles.buttonRow}>\r\n                <button className={styles.button} onClick={shapeInputSubmit}>Submit Shape</button>\r\n                <button className={styles.button} onClick={resetShape}>Reset Shape</button>\r\n            </div>\r\n            <canvas ref={canvasShapeRef} width='0' height='0' onClick={canvasShapeClick} />\r\n        </div>\r\n    )\r\n}","import React, { useRef } from 'react';\r\nimport C2S from 'canvas2svg';\r\n\r\nfunction Download(props) {\r\n    let downloadCanvas = useRef();\r\n    let svgString = '';\r\n    var outputCanvasWidth = 0;\r\n    var outputCanvasHeight = 0;\r\n\r\n    if(props.coords[0]){\r\n        outputCanvasWidth = Math.max(...(props.coords[0].map(c => c[0])));\r\n        outputCanvasHeight = Math.max(...(props.coords[0].map(c => c[1])));\r\n    }\r\n\r\n    function renderClicked() {\r\n        if (props.coords.length) {\r\n            var ctx = downloadCanvas.current.getContext('2d');\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = \"#FF0000\";\r\n            ctx.lineWidth = 3;\r\n            ctx.moveTo(props.coords[0][0][0], props.coords[0][0][1]);\r\n            for (let i = 1; i < props.coords[0].length; i++) {\r\n                ctx.lineTo(props.coords[0][i][0], props.coords[0][i][1]);\r\n                ctx.moveTo(props.coords[0][i][0], props.coords[0][i][1]);\r\n            }\r\n            ctx.stroke();\r\n        }\r\n    }\r\n\r\n    function downloadClicked() {\r\n        if(props.coords.length) { \r\n             // let width = Math.max(props.coords.map((coord) => {return (Math.max(...(coord.map(c => c[0]))))})); trying to do some code golf          \r\n            let xMaxOfShapes = props.coords.map((coord) => {\r\n                return (Math.max(...(coord.map(c => c[0]))));\r\n            });\r\n            let width = Math.max(...xMaxOfShapes);\r\n            let height = Math.max(...(props.coords[0].map(c => c[1])));\r\n            var ctx2 = new C2S(width, height);\r\n            console.log(props.maxSideLength);\r\n            if (props.coords) {\r\n                props.coords.forEach((side) => {\r\n                    ctx2.beginPath();\r\n                    ctx2.strokeStyle = \"#FF0000\";\r\n                    ctx2.lineWidth = 1;\r\n                    ctx2.moveTo(side[0][0], side[0][1]);\r\n                    for (let i = 1; i < side.length; i++) {\r\n                        ctx2.lineTo(side[i][0], side[i][1]);\r\n                        ctx2.moveTo(side[i][0], side[i][1]);\r\n                    }\r\n                    ctx2.stroke();\r\n                })\r\n                svgString = ctx2.getSerializedSvg(true);\r\n                let start = svgString.indexOf('width=');\r\n                let end = svgString.indexOf('>');\r\n                let widthInches = width / props.scale;\r\n                let heightInches = height / props.scale;\r\n                let inchesScale = `width='${widthInches}in' height='${heightInches}in' viewBox='0 0 ${width} ${height}'`\r\n                svgString = svgString.substr(0, start) + inchesScale + svgString.substr(end);\r\n                const svgDownload = document.createElement('a');\r\n                const file = new Blob([svgString], { type: 'text/plain' });\r\n                svgDownload.href = URL.createObjectURL(file);\r\n                svgDownload.download = \"bagPlan.svg\";\r\n                document.body.appendChild(svgDownload);\r\n                svgDownload.click();\r\n            }\r\n        }        \r\n    }\r\n\r\n    function placeOrder() {\r\n        console.log('hi44444');\r\n    }\r\n\r\n    function signInClicked() {\r\n        //set active main component\r\n\r\n    }\r\n    \r\n    let customOrderOrSignIn = (props.user)  ? (\r\n        <button onClick={placeOrder} className='button'>Order Custom</button>\r\n    ) : (\r\n        <button onClick = { signInClicked } className = 'button'>Order Custom</button>\r\n    );\r\n    \r\n    if (props.customSpecUI.download === 'active') {\r\n        return (\r\n            <div className='results'>\r\n                <button className='button' onClick={renderClicked}>Render</button>\r\n                <button className='button' onClick={downloadClicked}>Download SVG</button>\r\n                {customOrderOrSignIn}\r\n                <canvas className='outputCanvas' ref={downloadCanvas} width={outputCanvasWidth} height={outputCanvasHeight} />\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Download;","import React from 'react';\r\nimport StyleSelection from './StyleSelection';\r\nimport ImageUpload from './ImageUpload';\r\nimport ScaleInput from './ScaleInput';\r\nimport ShapeInput from './ShapeInput';\r\nimport Download from './Download';\r\nimport styles from '../styles/CustomSpec.module.css';\r\n\r\nconst BikeCanvas = () => {\r\n    return (\r\n        <div className={styles.customSpec} >\r\n            <StyleSelection />\r\n            <ImageUpload />\r\n            <ScaleInput />\r\n            <ShapeInput />\r\n            {/*<Download /> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BikeCanvas;","import React, { useState } from 'react';\r\n//hooks\r\nimport { useUIStateManager } from '../customHooks/useUIStateManager'\r\n//context\r\nimport { ModeContext } from '../modeContext';\r\nimport { CustomSpecContext } from '../customSpecContext';\r\n\r\n//components\r\nimport Header from './Header';\r\nimport Home from './Home';\r\nimport CustomSpecification from './CustomSpecification';\r\n\r\nexport default function App() {\r\n  //set up mode context\r\n  const [activeMainComponent, setActiveMainComponent] = useState('home');\r\n  const mode = { activeMainComponent, setActiveMainComponent };\r\n\r\n  //set up customSpecContext\r\n  const [customSpecState, setCustomSpecState] = useState({\r\n    style: '',\r\n    image: null,\r\n    scale: null,\r\n    shape: null\r\n  });\r\n  \r\n  const [customSpecUIState, setActiveCustomSpecPhase] = useUIStateManager();\r\n  const custom = { customSpecState, setCustomSpecState, customSpecUIState, setActiveCustomSpecPhase };\r\n\r\n  return (\r\n    <ModeContext.Provider value={mode}>\r\n      <CustomSpecContext.Provider value={custom}>\r\n        <Header />\r\n        <MainComponent mode={mode} />\r\n      </CustomSpecContext.Provider>\r\n    </ModeContext.Provider>\r\n  )\r\n}\r\n\r\nconst MainComponent = (props) => {\r\n  switch (props.mode.activeMainComponent) {\r\n    case 'home':\r\n      return (<Home />)\r\n    case 'customSpec':\r\n      return <CustomSpecification />\r\n    default:\r\n      console.log('default')\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nconst render = () => {\r\n    ReactDOM.render(\r\n        <App />\r\n        , document.getElementById('root')\r\n    );\r\n};\r\n\r\nrender(App);"],"sourceRoot":""}