{"version":3,"sources":["styles/CustomSpec.module.css","styles/Home.module.css","styles/StyleSelection.module.css","styles/ImageUpload.module.css","styles/ScaleInput.module.css","styles/ShapeInput.module.css","styles/Header.module.css","modeContext.js","aws-exports.js","components/Header.jsx","components/Home.jsx","components/Account.jsx","assets/images/Toptube.js","assets/images/Full.js","assets/images/Front.js","customSpecContext.js","components/StyleSelection.jsx","components/ImageUpload.jsx","actions.js","components/ScaleInput.jsx","components/ShapeInput.jsx","components/Download.jsx","components/CustomSpecification.jsx","components/App.js","index.js"],"names":["module","exports","ModeContext","createContext","awsmobile","Header","setActiveMainComponent","useContext","className","styles","header","headerContent","headerTitle","links","onClick","Amplify","configure","config","SignInOutComponent","useState","user","setUser","useEffect","Hub","listen","payload","event","data","Auth","currentAuthenticatedUser","signOut","federatedSignIn","Home","home","iconDescContainer","bigScreenReverseRow","icon","fontSize","color","text","row","Account","props","emailInputRef","useRef","passwordInputRef","reenterPasswordInputRef","React","activeForm","setActiveForm","form","onSubmit","e","preventDefault","console","log","value","signInFormSubmit","ref","input","placeholder","type","createAccountFormSubmit","activeMainComponent","customSpecUI","signIn","SvgToptube","width","height","viewBox","d","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","transform","ry","opacity","SvgFull","SvgFront","CustomSpecContext","StyleSelection","customSpecState","setCustomSpecState","dispatch","handleClick","style","cssStyle","styleContainer","styleItemActive","styleItem","bagIcon","Front","Full","ImageUpload","customSpecUIState","fileInput","uploadCanvas","img","Image","saveImage","ctx","current","getContext","drawImage","canvasDataUrl","toDataURL","image","imageLoadFailed","error","imageUpload","button","htmlFor","name","id","onChange","onload","onerror","src","URL","createObjectURL","files","hidden","minimized","debounce","fn","ms","timer","clearTimeout","setTimeout","apply","arguments","ScaleInput","scale","ScaleInputActive","window","innerWidth","windowWidth","setWindowWidth","topTubePoints","setTopTubePoints","sourceDimensions","setSourceDimensions","canvasScaleRef","scaleInputRef","scaleInputDivRef","debouncedHandleResize","addEventListener","removeEventListener","imageHeight","imageWidth","displayScaleFactor","clientWidth","drawTopTubePoints","drawImageOnCanvas","forEach","point","drawCircle","strokeStyle","lineWidth","beginPath","arc","Math","PI","scaleInput","length","hypot","setPixelToInchScale","scaleInputForm","evt","rect","getBoundingClientRect","xSourceCoord","clientX","left","ySourceCoord","clientY","top","ShapeInput","shape","shapeInput","ShapeInputActive","points","setPoints","canvasShapeRef","shapeInputDivRef","drawPoints","drawLines","i","moveTo","lineTo","buttonRow","Download","BikeCanvas","customSpec","initialCustomSpecUIState","download","initialCustomSpecState","customSpecUIReducer","state","action","confirmation","Error","App","mode","useReducer","custom","Provider","CustomSpecification","renderMainComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a184641.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"customSpec\":\"CustomSpec_customSpec__3zSeu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__2Zh7y\",\"iconDescContainer\":\"Home_iconDescContainer__lwb9z\",\"row\":\"Home_row__3uUUw\",\"bigScreenReverseRow\":\"Home_bigScreenReverseRow__2LpWW\",\"icon\":\"Home_icon__1RNnw\",\"text\":\"Home_text__yLEED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bagIcon\":\"StyleSelection_bagIcon__gjqEV\",\"styleContainer\":\"StyleSelection_styleContainer__2rKvy\",\"styleItem\":\"StyleSelection_styleItem__HH9RA\",\"styleItemActive\":\"StyleSelection_styleItemActive__3VPpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageUpload\":\"ImageUpload_imageUpload__2kyVe\",\"button\":\"ImageUpload_button__2ZvqF\",\"fileInput\":\"ImageUpload_fileInput__32kdw\",\"hidden\":\"ImageUpload_hidden__3cEGb\",\"minimized\":\"ImageUpload_minimized__1kd-9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scaleInputForm\":\"ScaleInput_scaleInputForm__3GYfS\",\"scaleInput\":\"ScaleInput_scaleInput__3lksu\",\"button\":\"ScaleInput_button__26wym\",\"minimized\":\"ScaleInput_minimized__1IaZN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shapeInput\":\"ShapeInput_shapeInput__34sbM\",\"buttonRow\":\"ShapeInput_buttonRow__1DTqS\",\"button\":\"ShapeInput_button__vHN-I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3diqq\",\"headerContent\":\"Header_headerContent__1skw-\",\"headerTitle\":\"Header_headerTitle__2ZMQM\",\"links\":\"Header_links__KrrUu\"};","import { createContext } from \"react\";\r\nexport const ModeContext = createContext('home');","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-west-2\",\n    \"aws_cognito_identity_pool_id\": \"us-west-2:d18c05cc-ae5c-4b7a-9e72-16ac49d23888\",\n    \"aws_cognito_region\": \"us-west-2\",\n    \"aws_user_pools_id\": \"us-west-2_hIcaYQhye\",\n    \"aws_user_pools_web_client_id\": \"4emsfur38nbennha4cqquo0l52\",\n    \"oauth\": {\n        \"domain\": \"bike-bag-project2-new-env.auth.us-west-2.amazoncognito.com\",\n        \"scope\": [\n            \"phone\",\n            \"email\",\n            \"openid\",\n            \"profile\",\n            \"aws.cognito.signin.user.admin\"\n        ],\n        \"redirectSignIn\": \"http://localhost:3000/\",\n        \"redirectSignOut\": \"http://localhost:3000/\",\n        \"responseType\": \"code\"\n    },\n    \"federationTarget\": \"COGNITO_USER_POOLS\"\n};\n\n\nexport default awsmobile;\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { ModeContext } from '../modeContext';\r\nimport styles from '../styles/Header.module.css';\r\nimport Amplify from 'aws-amplify';\r\nimport config from '../aws-exports';\r\nimport { Auth, Hub } from 'aws-amplify';\r\n\r\nAmplify.configure(config)\r\n\r\nexport default function Header() {\r\n    const { setActiveMainComponent } = useContext(ModeContext);\r\n\r\n    return (\r\n        <div className={styles.header}>\r\n            <div className={styles.headerContent}>\r\n                <h1 className={styles.headerTitle}>Bike Frame Bag Designer</h1>\r\n                <div className={styles.links}>\r\n                    <SignInOutComponent />\r\n                    <h3 onClick={() => setActiveMainComponent('customSpec')}> Custom </h3>\r\n                    <h3 onClick={() => setActiveMainComponent('home')}> Home </h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SignInOutComponent = () => {\r\n    const [user, setUser] = useState(null)\r\n\r\n    useEffect(() => {\r\n        Hub.listen(\"auth\", ({ payload: { event, data } }) => {\r\n            if (event === \"signOut\") {\r\n                setUser(null);\r\n            } else if (event === 'signIn') {\r\n                setUser(Auth.currentAuthenticatedUser());\r\n            }\r\n        });\r\n    });\r\n\r\n    if (user) {\r\n        return (<h3 onClick={() => Auth.signOut()}> Sign Out </h3>)\r\n    } else {\r\n        return (\r\n            <h3 onClick={() => Auth.federatedSignIn()}> Sign In </h3>\r\n        )\r\n    }\r\n}","import React, { useContext } from 'react';\r\nimport { ModeContext } from '../modeContext';\r\nimport styles from '../styles/Home.module.css';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport SquareFootIcon from '@material-ui/icons/SquareFoot';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\n\r\nconst Home = () => {\r\n    const { setActiveMainComponent } = useContext(ModeContext);\r\n    return (\r\n        <div className={styles.home}>\r\n            \r\n            <h1>How it works</h1>\r\n\r\n            <div className={styles.iconDescContainer}>\r\n                <div className={styles.bigScreenReverseRow}>\r\n                    <div className={styles.icon}>\r\n                        <BackupIcon fontSize={'inherit'} color={'inherit'} />\r\n                    </div>\r\n\r\n                    <div className={styles.text}>\r\n                        <p>1. Upload an image of your bike</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.row}>\r\n                    <div className={styles.icon}>\r\n                        <SquareFootIcon fontSize={'inherit'} color={'inherit'} />\r\n                    </div>\r\n                    <div className={styles.text}>\r\n                        <p>2. Measure your bike to establish the scale</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.bigScreenReverseRow}>\r\n                    <div className={styles.icon}>\r\n                        <CreateIcon fontSize={'inherit'} color={'inherit'} />\r\n                    </div>\r\n\r\n                    <div className={styles.text}>\r\n                        <p>3. Outline your desired shape</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.row}>\r\n                    <div className={styles.icon}>\r\n                        <AddShoppingCartIcon fontSize={'inherit'} color={'inherit'} />\r\n                    </div>\r\n                    <div className={styles.text}>\r\n                        <p>4. Submit your design and receive your custom bike frame bag</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button className='button' onClick={() => setActiveMainComponent('customSpec')}> create custom bag</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useRef } from 'react';\r\n\r\nfunction Account(props) {\r\n    let emailInputRef = useRef();\r\n    let passwordInputRef = useRef();\r\n    let reenterPasswordInputRef = useRef();\r\n    const [activeForm, setActiveForm] = React.useState('signIn')\r\n\r\n    function createAccountFormSubmit(e) {\r\n        e.preventDefault();\r\n        if (passwordInputRef.value === reenterPasswordInputRef.value) {\r\n           console.log()\r\n        } else {\r\n            console.log('no');\r\n        }\r\n    }\r\n\r\n    function signInFormSubmit(e) {\r\n        e.preventDefault();\r\n        console.log()\r\n        passwordInputRef.value = '';\r\n        emailInputRef.value = '';\r\n    }\r\n\r\n    let form = (activeForm === 'signIn') ? (\r\n        <form onSubmit={ e => signInFormSubmit(e)} className='signInForm'>\r\n            <input ref={(input) => { emailInputRef = input }} placeholder='Email' type='text' />\r\n            <input ref={(input) => { passwordInputRef = input }} placeholder='password' type='password' />\r\n            <button className='button accountButton' type='submit'>Sign In</button>\r\n            <button className='button accountButton' onClick={() => setActiveForm('createAccount')}>Create Accout</button>\r\n        </form> \r\n    ) :  \r\n        <form onSubmit={e => createAccountFormSubmit(e)} className='accountInputForm'>\r\n            <input ref={(input) => { emailInputRef = input }} placeholder='Email' type='text' />\r\n            <input ref={(input) => { passwordInputRef = input }} placeholder='password' type='password' />\r\n            <input ref={(input) => { reenterPasswordInputRef = input }} placeholder='re-enter password' type='password' />\r\n            <button className='button accountButton' type='submit'>Create Account</button>\r\n            <button className='button accountButton' onClick={() => setActiveForm('signIn')}>Already have an account? -  Sign In</button>\r\n        </form>\r\n    \r\n    if (props.activeMainComponent === 'account' && props.user) {\r\n        //set active main component\r\n        return null;\r\n    } else if (!props.user && (props.activeMainComponent === 'account' || props.customSpecUI.signIn === 'active')) {\r\n       return (\r\n           <div className='account'>\r\n               {form}\r\n           </div>\r\n       )\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Account;","import React from \"react\";\r\n\r\nconst SvgToptube = props => (\r\n  <svg width={644.091} height={341.511} {...props} viewBox=\"0 0 644 342\">\r\n    <path\r\n      d=\"M207.937 66.749l305.069-59.25 15.127 52.947L274.75 333.999z\"\r\n      fill=\"none\"\r\n      stroke=\"#e08900\"\r\n      strokeWidth={15}\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <rect\r\n      width={52.764}\r\n      height={118.582}\r\n      x={369.241}\r\n      y={-221.188}\r\n      transform=\"matrix(.6959 .71813 -.67781 .73523 0 0)\"\r\n      ry={22.455}\r\n      opacity={0.97}\r\n      fill=\"#0000b2\"\r\n    />\r\n    <rect\r\n      width={52.764}\r\n      height={118.582}\r\n      x={194.913}\r\n      y={207.595}\r\n      transform=\"matrix(.98364 -.18014 .23523 .97194 0 0)\"\r\n      ry={18.571}\r\n      opacity={0.97}\r\n      fill=\"#0000b2\"\r\n    />\r\n    <path\r\n      d=\"M207.937 66.749L10.021 264.665 7.5 303.744l267.25 30.255M528.133 60.446L636.546 297.44\"\r\n      fill=\"none\"\r\n      stroke=\"#e08900\"\r\n      strokeWidth={15}\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M216.762 72.737l15.127 58.618 247.08-27.733L520.254 59.5 508.28 15.38z\"\r\n      fill=\"#92ba40\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default SvgToptube;\r\n","import React from \"react\";\r\n\r\nconst SvgFull = props => (\r\n  <svg width={644.091} height={341.511} {...props} viewBox=\"0 0 644 342\">\r\n    <path\r\n      d=\"M207.937 66.749l305.069-59.25 15.127 52.947L274.75 333.999z\"\r\n      fill=\"none\"\r\n      stroke=\"#e08900\"\r\n      strokeWidth={15}\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M207.937 66.749L10.021 264.665 7.5 303.744l267.25 30.255M528.133 60.446L636.546 297.44\"\r\n      fill=\"none\"\r\n      stroke=\"#e08900\"\r\n      strokeWidth={15}\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M216.577 72.183l48.308 193.333h63.381L520.7 60.837l-12.644-44.79z\"\r\n      fill=\"#92ba40\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default SvgFull;\r\n","import React from \"react\";\r\n\r\nconst SvgFront = props => (\r\n  <svg width={644.091} height={341.511} {...props} viewBox=\"0 0 644 342\">\r\n    <path\r\n      d=\"M207.937 66.749l305.069-59.25 15.127 52.947L274.75 333.999z\"\r\n      fill=\"none\"\r\n      stroke=\"#e08900\"\r\n      strokeWidth={15}\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <rect\r\n      width={52.764}\r\n      height={118.582}\r\n      x={194.913}\r\n      y={207.595}\r\n      transform=\"matrix(.98364 -.18014 .23523 .97194 0 0)\"\r\n      ry={18.571}\r\n      opacity={0.97}\r\n      fill=\"#0000b2\"\r\n    />\r\n    <path\r\n      d=\"M207.937 66.749L10.021 264.665 7.5 303.744l267.25 30.255M528.133 60.446L636.546 297.44\"\r\n      fill=\"none\"\r\n      stroke=\"#e08900\"\r\n      strokeWidth={15}\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M269.523 62.098l51.275 211.962L479.415 104.96 520.7 60.837l-12.644-44.79z\"\r\n      fill=\"#92ba40\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default SvgFront;\r\n","import { createContext } from \"react\";\r\nexport const CustomSpecContext = createContext(null);","import React, { useContext } from 'react';\r\nimport TopTube from '../assets/images/Toptube';\r\nimport Full from '../assets/images/Full';\r\nimport Front from '../assets/images/Front';\r\nimport { CustomSpecContext } from '../customSpecContext';\r\nimport cssStyle from '../styles/StyleSelection.module.css';\r\n\r\nconst StyleSelection = () => {\r\n    const { customSpecState, setCustomSpecState, dispatch } = useContext(CustomSpecContext)\r\n    \r\n    const handleClick = (style) => {\r\n        setCustomSpecState({ ...customSpecState, style: style })\r\n        dispatch('image');\r\n    }\r\n\r\n    return (\r\n        <div className={cssStyle.styleContainer}>\r\n            <div className={customSpecState.style === 'topTube' ? cssStyle.styleItemActive : cssStyle.styleItem}\r\n                onClick={() => handleClick('topTube')}>\r\n                <h4>Top Tube</h4>\r\n                <TopTube className={cssStyle.bagIcon} />\r\n            </div>\r\n            <div className={customSpecState.style === 'front' ? cssStyle.styleItemActive : cssStyle.styleItem}\r\n                onClick={() => handleClick('front')}>\r\n                <h4>Front</h4>\r\n                <Front className={cssStyle.bagIcon} />\r\n            </div>\r\n            <div className={customSpecState.style === 'full' ? cssStyle.styleItemActive : cssStyle.styleItem}\r\n                onClick={() => handleClick('full')}>\r\n                <h4>Full</h4>\r\n                <Full className={cssStyle.bagIcon} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleSelection;","import React, { useRef, useContext } from 'react';\r\nimport { CustomSpecContext } from '../customSpecContext';\r\nimport styles from '../styles/ImageUpload.module.css';\r\n\r\nconst ImageUpload = () => {\r\n    const { customSpecUIState, setCustomSpecState, customSpecState, dispatch } = useContext(CustomSpecContext)\r\n    let fileInput = useRef();\r\n    let uploadCanvas = useRef();\r\n    var img = new Image();\r\n\r\n    const onImageLoad = () => {\r\n        img.onload = saveImage;\r\n        img.onerror = imageLoadFailed;\r\n        img.src = URL.createObjectURL(fileInput.current.files[0]);\r\n    }\r\n\r\n    const saveImage = () => {\r\n        let ctx = uploadCanvas.current.getContext('2d');\r\n        uploadCanvas.current.width = img.width;\r\n        uploadCanvas.current.height = img.height;\r\n        ctx.drawImage(img, 0, 0);\r\n        let canvasDataUrl = uploadCanvas.current.toDataURL('image/png');\r\n        setCustomSpecState({ ...customSpecState, image: canvasDataUrl })\r\n        dispatch('scale');\r\n    }\r\n\r\n    const imageLoadFailed = () => {\r\n        console.error(\"The provided file couldn't be loaded as an Image media\");\r\n    }\r\n\r\n\r\n    switch (customSpecUIState.image) {\r\n        case 'active':\r\n            return (\r\n                <div className={styles.imageUpload}>\r\n                    <h3>Image Upload</h3>\r\n                    <label className={styles.button} htmlFor='file'><p>Upload Photo</p></label>\r\n                    <input className={styles.fileInput} type='file' name='file' id='file' ref={fileInput} onChange={onImageLoad} />\r\n                    <canvas className={styles.hidden}\r\n                        ref={uploadCanvas}\r\n                        width=''\r\n                        height='' />\r\n                </div>\r\n            )\r\n        case 'minimized':\r\n            return (\r\n                <div className={styles.minimized} onClick={() => dispatch('image')}>\r\n                    <h3>Image Upload</h3>\r\n                </div>\r\n            )\r\n        default: return null\r\n    }\r\n\r\n}\r\n\r\nexport default ImageUpload;","export function debounce(fn, ms) {\r\n    let timer\r\n    return () => {\r\n        clearTimeout(timer)\r\n        timer = setTimeout(() => {\r\n            timer = null\r\n            fn.apply(this, arguments)\r\n        }, ms)\r\n    };\r\n}","import React, { useRef, useContext, useEffect, useState } from 'react';\r\nimport { CustomSpecContext } from '../customSpecContext';\r\nimport { debounce } from '../actions';\r\nimport styles from '../styles/ScaleInput.module.css'\r\n\r\nexport default function ScaleInput() {\r\n    const { customSpecUIState, dispatch } = useContext(CustomSpecContext)\r\n    switch (customSpecUIState.scale) {\r\n        case 'active':\r\n            return <ScaleInputActive />\r\n        case 'minimized':\r\n            return (\r\n                <div className={styles.minimized} onClick={() => dispatch('scale')}>\r\n                    <h3>Scale</h3>\r\n                </div>\r\n            )\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nconst ScaleInputActive = () => {\r\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n    const [topTubePoints, setTopTubePoints] = useState([]);\r\n    const [sourceDimensions, setSourceDimensions] = useState(null);\r\n    const { setCustomSpecState, customSpecState, dispatch } = useContext(CustomSpecContext)\r\n    let canvasScaleRef = useRef();\r\n    let scaleInputRef = useRef();\r\n    let scaleInputDivRef = useRef();\r\n    let ctx;\r\n\r\n    //sets up a listener to update state on window resize\r\n    const debouncedHandleResize = debounce(() => setWindowWidth(window.innerWidth), 50)\r\n    useEffect(() => {\r\n        window.addEventListener('resize', debouncedHandleResize);\r\n        return () => {\r\n            window.removeEventListener('resize', debouncedHandleResize)\r\n        };\r\n    }, [])\r\n\r\n    //loads image onto canvas and calls drawTopTubePoints\r\n    const drawImageOnCanvas = () => {\r\n        let image = new Image();\r\n        image.onload = () => {\r\n            if (!sourceDimensions) setSourceDimensions({ imageHeight: image.height, imageWidth: image.width });\r\n            let displayScaleFactor = scaleInputDivRef.current.clientWidth / image.width;\r\n            canvasScaleRef.current.width = image.width * displayScaleFactor;\r\n            canvasScaleRef.current.height = image.height * displayScaleFactor;\r\n            ctx = canvasScaleRef.current.getContext('2d');\r\n            ctx.drawImage(image, 0, 0, canvasScaleRef.current.width, canvasScaleRef.current.height); //draws image on canvas\r\n            drawTopTubePoints()\r\n        }\r\n        image.src = customSpecState.image;\r\n    }\r\n\r\n    //draws the image and points on the canvas when window width or points changes\r\n    useEffect(() => {\r\n        drawImageOnCanvas();\r\n    }, [windowWidth, topTubePoints])\r\n\r\n    //draws the points on the canvas\r\n    const drawTopTubePoints = () => {\r\n        topTubePoints.forEach(point => {\r\n            drawCircle((point[0] * (canvasScaleRef.current.width / sourceDimensions.imageWidth)),\r\n                (point[1] * (canvasScaleRef.current.height / sourceDimensions.imageHeight)))\r\n        })\r\n    }\r\n\r\n    //draws a user-selected point on the canvas\r\n    const drawCircle = (x, y) => {\r\n        ctx = canvasScaleRef.current.getContext('2d');\r\n        ctx.strokeStyle = \"#FF0000\";\r\n        ctx.lineWidth = 3;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, 10, 0, 2 * Math.PI);\r\n        ctx.stroke();\r\n    }\r\n\r\n    //captures user click on the canvas and converts to pixel coordinates of original image\r\n    const canvasScaleClick = (evt) => {\r\n        let displayScaleFactor = scaleInputDivRef.current.clientWidth / sourceDimensions.imageWidth;\r\n        if (topTubePoints.length < 2) {\r\n            let rect = canvasScaleRef.current.getBoundingClientRect();\r\n            let x = (evt.clientX - rect.left);\r\n            let y = (evt.clientY - rect.top);\r\n            let xSourceCoord = x / displayScaleFactor;\r\n            let ySourceCoord = y / displayScaleFactor;\r\n            if (topTubePoints.length === 1) {\r\n                setTopTubePoints([topTubePoints[0], [xSourceCoord, ySourceCoord]]);\r\n            } else {\r\n                setTopTubePoints([[xSourceCoord, ySourceCoord]]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //establishes a ratio of source image pixels to inches\r\n    const setPixelToInchScale = (event) => {\r\n        event.preventDefault();\r\n        if (topTubePoints.length === 2) {\r\n            let distance = Math.hypot(topTubePoints[0][0] - topTubePoints[1][0], topTubePoints[0][1] - topTubePoints[1][1])\r\n            let scale = (distance / scaleInputRef.value);\r\n            setCustomSpecState({ ...customSpecState, scale: scale })\r\n            dispatch('shape');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.scaleInput} ref={scaleInputDivRef}>\r\n            <h3>Scale</h3>\r\n            <form onSubmit={(event) => setPixelToInchScale(event)} className={styles.scaleInputForm}>\r\n                <input ref={(input) => { scaleInputRef = input }} placeholder='Top Tube Length in inches' type='number' />\r\n                <button className={styles.button} type='submit'>Submit</button>\r\n                <button className={styles.button} onClick={() => setTopTubePoints([])}>Reset</button>\r\n            </form>\r\n            <canvas ref={canvasScaleRef} width='0' height='0' onClick={canvasScaleClick} />\r\n        </div>\r\n    )\r\n}","import React, { useRef, useContext, useEffect, useState } from 'react';\r\nimport { CustomSpecContext } from '../customSpecContext';\r\nimport { debounce } from '../actions';\r\nimport styles from '../styles/ShapeInput.module.css'\r\n\r\nconst ShapeInput = () => {\r\n    const { customSpecUIState, dispatch } = useContext(CustomSpecContext)\r\n\r\n    switch (customSpecUIState.shape) {\r\n        case 'active':\r\n            return <ShapeInputActive />\r\n        case 'minimized':\r\n            return (\r\n                <div className={styles.shapeInput} onClick={() => dispatch('shape')}>\r\n                    <h3>Shape</h3>\r\n                </div>\r\n            )\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nexport default ShapeInput;\r\n\r\nconst ShapeInputActive = () => {\r\n    const { customSpecState, setCustomSpecState, dispatch } = useContext(CustomSpecContext);\r\n    const [points, setPoints] = useState([]);\r\n    const [sourceDimensions, setSourceDimensions] = useState(null);\r\n    const [windowWidth, setWindowWidth] = useState();\r\n    let canvasShapeRef = useRef();\r\n    let shapeInputDivRef = useRef();\r\n    let displayScaleFactor;\r\n\r\n    //sets up a listener to update state on window resize\r\n    useEffect(() => {\r\n        window.addEventListener('resize', debouncedHandleResize);\r\n        return () => {\r\n            window.removeEventListener('resize', debouncedHandleResize)\r\n        };\r\n    }, [])\r\n\r\n    const debouncedHandleResize = debounce(() => setWindowWidth(window.innerWidth), 50)\r\n\r\n    //draws the image and points on the canvas when window width or points changes\r\n    useEffect(() => {\r\n        drawImageOnCanvas();\r\n    }, [windowWidth, points])\r\n\r\n    const drawImageOnCanvas = () => {\r\n        let image = new Image();\r\n        image.onload = () => {\r\n            if (!sourceDimensions) setSourceDimensions({ imageHeight: image.height, imageWidth: image.width }); //saves image source dimensions on first load\r\n            canvasShapeRef.current.width = shapeInputDivRef.current.clientWidth; //set width of canvas to be equal to its parent div\r\n            displayScaleFactor = canvasShapeRef.current.width / image.width;\r\n            canvasShapeRef.current.height = displayScaleFactor * image.height; //set height based on width and image ratio\r\n            let ctx = canvasShapeRef.current.getContext('2d');\r\n            ctx.drawImage(image, 0, 0, canvasShapeRef.current.width, canvasShapeRef.current.height); //draws image on canvas\r\n            drawPoints();\r\n            drawLines();\r\n        }\r\n        image.src = customSpecState.image;\r\n    }\r\n\r\n    const drawPoints = () => {\r\n        points.forEach(point => {\r\n            drawCircle(point[0] * displayScaleFactor, point[1] * displayScaleFactor)\r\n        })\r\n    }\r\n\r\n    const drawCircle = (x, y) => {\r\n        let ctx = canvasShapeRef.current.getContext('2d');\r\n        ctx.strokeStyle = \"#FF0000\";\r\n        ctx.lineWidth = 3;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, 10, 0, 2 * Math.PI);\r\n        ctx.stroke();\r\n    }\r\n\r\n    const drawLines = () => {\r\n        for (let i = 0; i < points.length - 1; i++) {\r\n            let ctx = canvasShapeRef.current.getContext('2d');\r\n            ctx.strokeStyle = \"#FF0000\";\r\n            ctx.lineWidth = 3;\r\n            ctx.moveTo(points[i][0] * displayScaleFactor, points[i][1] * displayScaleFactor);\r\n            ctx.lineTo(points[i + 1][0] * displayScaleFactor, points[i + 1][1] * displayScaleFactor);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n\r\n    //allows users to reset\r\n    const resetShape = () => {\r\n        setPoints([]);\r\n    }\r\n    //allows users to submit\r\n    const shapeInputSubmit = () => {\r\n        setCustomSpecState({\r\n            ...customSpecState,\r\n            shape: points\r\n        })\r\n        dispatch('confirmation');\r\n    }\r\n\r\n    // allows user to select points\r\n    // translates display coords to source coords\r\n    const canvasShapeClick = (evt) => {\r\n\r\n        //get display coordinate of click\r\n        let rect = canvasShapeRef.current.getBoundingClientRect();\r\n        let x = (evt.clientX - rect.left);\r\n        let y = (evt.clientY - rect.top);\r\n\r\n        //transform to source coordinate\r\n        let xSourceCoord = x * sourceDimensions.imageWidth / canvasShapeRef.current.width;\r\n        let ySourceCoord = y * sourceDimensions.imageHeight / canvasShapeRef.current.height;\r\n\r\n        //check through existing points to see if click is on a previously selected point \r\n        //(ie. when closing the shape)\r\n        for (let i = 0; i < points.length; i++) {\r\n            let distance = Math.hypot(points[i][0] * displayScaleFactor - xSourceCoord * displayScaleFactor, points[i][1] * displayScaleFactor- ySourceCoord * displayScaleFactor);\r\n            if (distance < 10 ) {        //i.e. if click is within drawn circle\r\n                setPoints([...points, [points[i][0], points[i][1]]]); //add that same point to the array\r\n                return;\r\n            };\r\n        }\r\n        setPoints([...points, [xSourceCoord, ySourceCoord]]);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.shapeInput} ref={shapeInputDivRef}>\r\n            <h3>Shape</h3>\r\n            <div className={styles.buttonRow}>\r\n                <button className={styles.button} onClick={shapeInputSubmit}>Submit Shape</button>\r\n                <button className={styles.button} onClick={resetShape}>Reset Shape</button>\r\n            </div>\r\n            <canvas ref={canvasShapeRef} width='0' height='0' onClick={canvasShapeClick} />\r\n        </div>\r\n    )\r\n}","import React, { useRef } from 'react';\r\nimport C2S from 'canvas2svg';\r\n\r\nfunction Download(props) {\r\n    let downloadCanvas = useRef();\r\n    let svgString = '';\r\n    var outputCanvasWidth = 0;\r\n    var outputCanvasHeight = 0;\r\n\r\n    if(props.coords[0]){\r\n        outputCanvasWidth = Math.max(...(props.coords[0].map(c => c[0])));\r\n        outputCanvasHeight = Math.max(...(props.coords[0].map(c => c[1])));\r\n    }\r\n\r\n    function renderClicked() {\r\n        if (props.coords.length) {\r\n            var ctx = downloadCanvas.current.getContext('2d');\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = \"#FF0000\";\r\n            ctx.lineWidth = 3;\r\n            ctx.moveTo(props.coords[0][0][0], props.coords[0][0][1]);\r\n            for (let i = 1; i < props.coords[0].length; i++) {\r\n                ctx.lineTo(props.coords[0][i][0], props.coords[0][i][1]);\r\n                ctx.moveTo(props.coords[0][i][0], props.coords[0][i][1]);\r\n            }\r\n            ctx.stroke();\r\n        }\r\n    }\r\n\r\n    function downloadClicked() {\r\n        if(props.coords.length) { \r\n             // let width = Math.max(props.coords.map((coord) => {return (Math.max(...(coord.map(c => c[0]))))})); trying to do some code golf          \r\n            let xMaxOfShapes = props.coords.map((coord) => {\r\n                return (Math.max(...(coord.map(c => c[0]))));\r\n            });\r\n            let width = Math.max(...xMaxOfShapes);\r\n            let height = Math.max(...(props.coords[0].map(c => c[1])));\r\n            var ctx2 = new C2S(width, height);\r\n            console.log(props.maxSideLength);\r\n            if (props.coords) {\r\n                props.coords.forEach((side) => {\r\n                    ctx2.beginPath();\r\n                    ctx2.strokeStyle = \"#FF0000\";\r\n                    ctx2.lineWidth = 1;\r\n                    ctx2.moveTo(side[0][0], side[0][1]);\r\n                    for (let i = 1; i < side.length; i++) {\r\n                        ctx2.lineTo(side[i][0], side[i][1]);\r\n                        ctx2.moveTo(side[i][0], side[i][1]);\r\n                    }\r\n                    ctx2.stroke();\r\n                })\r\n                svgString = ctx2.getSerializedSvg(true);\r\n                let start = svgString.indexOf('width=');\r\n                let end = svgString.indexOf('>');\r\n                let widthInches = width / props.scale;\r\n                let heightInches = height / props.scale;\r\n                let inchesScale = `width='${widthInches}in' height='${heightInches}in' viewBox='0 0 ${width} ${height}'`\r\n                svgString = svgString.substr(0, start) + inchesScale + svgString.substr(end);\r\n                const svgDownload = document.createElement('a');\r\n                const file = new Blob([svgString], { type: 'text/plain' });\r\n                svgDownload.href = URL.createObjectURL(file);\r\n                svgDownload.download = \"bagPlan.svg\";\r\n                document.body.appendChild(svgDownload);\r\n                svgDownload.click();\r\n            }\r\n        }        \r\n    }\r\n\r\n    function placeOrder() {\r\n        console.log('hi44444');\r\n    }\r\n\r\n    function signInClicked() {\r\n        console.log('hi88888888')\r\n        //set active main component\r\n\r\n    }\r\n    \r\n    let customOrderOrSignIn = (props.user)  ? (\r\n        <button onClick={placeOrder} className='button'>Order Custom</button>\r\n    ) : (\r\n        <button onClick = { signInClicked } className = 'button'>Order Custom</button>\r\n    );\r\n    \r\n    if (props.customSpecUI.download === 'active') {\r\n        return (\r\n            <div className='results'>\r\n                <button className='button' onClick={renderClicked}>Render</button>\r\n                <button className='button' onClick={downloadClicked}>Download SVG</button>\r\n                {customOrderOrSignIn}\r\n                <canvas className='outputCanvas' ref={downloadCanvas} width={outputCanvasWidth} height={outputCanvasHeight} />\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Download;","import React from 'react';\r\nimport StyleSelection from './StyleSelection';\r\nimport ImageUpload from './ImageUpload';\r\nimport ScaleInput from './ScaleInput';\r\nimport ShapeInput from './ShapeInput';\r\nimport Download from './Download';\r\nimport styles from '../styles/CustomSpec.module.css';\r\n\r\nconst BikeCanvas = () => {\r\n    return (\r\n        <div className={styles.customSpec} >\r\n            <StyleSelection />\r\n            <ImageUpload />\r\n            <ScaleInput />\r\n            <ShapeInput />\r\n            {/*<Download /> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BikeCanvas;","import React, { useState, useReducer, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport Home from './Home';\r\nimport Account from './Account';\r\nimport CustomSpecification from './CustomSpecification';\r\nimport { ModeContext } from '../modeContext';\r\nimport { CustomSpecContext } from '../customSpecContext';\r\n\r\nconst initialCustomSpecUIState = {\r\n  image: null,\r\n  scale: null,\r\n  shape: null,\r\n  download: null\r\n}\r\n\r\nconst initialCustomSpecState = {\r\n  style: '',\r\n  image: null,\r\n  scale: null,\r\n  shape: null\r\n}\r\n\r\nconst customSpecUIReducer = (state, action) => {\r\n  switch (action) {\r\n    case 'image':\r\n      return {\r\n        ...state,\r\n        image: 'active',\r\n        scale: state.scale === null ? null : 'minimized',\r\n        shape: state.shape === null ? null : 'minimized',\r\n        confirmation: state.confirmation == null ? null : 'minimized'\r\n      }\r\n\r\n    case 'scale':\r\n      return {\r\n        ...state,\r\n        scale: 'active',\r\n        image: 'minimized',\r\n        shape: state.shape == null ? null : 'minimized',\r\n        confirmation: state.confirmation == null ? null : 'minimized'\r\n      }\r\n    case 'shape':\r\n      return {\r\n        ...state,\r\n        shape: 'active',\r\n        image: 'minimized',\r\n        scale: 'minimized',\r\n        confirmation: state.confirmation == null ? null : 'minimized'\r\n      }\r\n    case 'confirmation':\r\n      return {\r\n        ...state,\r\n        shape: 'minimized',\r\n        scale: 'minimized',\r\n        image: 'minimized',\r\n      }\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n  //set up mode context\r\n  const [activeMainComponent, setActiveMainComponent] = useState('home');\r\n  const mode = { activeMainComponent, setActiveMainComponent };\r\n\r\n\r\n  //set up customSpecContext\r\n  const [customSpecState, setCustomSpecState] = useState(initialCustomSpecState);\r\n  const [customSpecUIState, dispatch] = useReducer(customSpecUIReducer, initialCustomSpecUIState);\r\n  const custom = { customSpecState, setCustomSpecState, customSpecUIState, dispatch };\r\n\r\n  useEffect(() => {\r\n    console.log(customSpecState)\r\n  }, [customSpecState]);\r\n\r\n\r\n\r\n\r\n  const renderMainComponent = () => {\r\n    switch (mode.activeMainComponent) {\r\n      case 'home':\r\n        return <Home />\r\n      case 'customSpec':\r\n        return <CustomSpecification />\r\n      case 'account':\r\n        return <Account />\r\n      default:\r\n        console.log('default')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ModeContext.Provider value={mode}>\r\n      <CustomSpecContext.Provider value={custom}>\r\n        <Header />\r\n        {renderMainComponent()}\r\n      </CustomSpecContext.Provider>\r\n    </ModeContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nconst render = () => {\r\n    ReactDOM.render(\r\n        <App />\r\n        , document.getElementById('root')\r\n    );\r\n};\r\n\r\nrender(App);"],"sourceRoot":""}